// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sistema_Veterinario.DAL;

#nullable disable

namespace Sistema_Veterinario.DAL.Migrations
{
    [DbContext(typeof(Sistema_VeterinarioDbContext))]
    [Migration("20240401010612_sexta")]
    partial class sexta
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sistema_Veterinario.DAL.Cita", b =>
                {
                    b.Property<int>("CitaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CitaID"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diagnostico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoCitaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("MascotaID")
                        .HasColumnType("int");

                    b.Property<string>("VeterinarioPrincipalID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VeterinarioSecundarioID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CitaID");

                    b.HasIndex("EstadoCitaID");

                    b.HasIndex("MascotaID");

                    b.HasIndex("VeterinarioPrincipalID");

                    b.HasIndex("VeterinarioSecundarioID");

                    b.ToTable("Citas");
                });

            modelBuilder.Entity("Sistema_Veterinario.DAL.DesparasitacionVacuna", b =>
                {
                    b.Property<int>("DesparasitacionVacunaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DesparasitacionVacunaID"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("MascotaID")
                        .HasColumnType("int");

                    b.Property<string>("Producto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DesparasitacionVacunaID");

                    b.HasIndex("MascotaID");

                    b.ToTable("DesparasitacionVacunas");
                });

            modelBuilder.Entity("Sistema_Veterinario.DAL.EstadoCita", b =>
                {
                    b.Property<int>("EstadoCitaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadoCitaID"));

                    b.Property<string>("EstadoCitaNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstadoCitaID");

                    b.ToTable("EstadoCitas");
                });

            modelBuilder.Entity("Sistema_Veterinario.DAL.Mascota", b =>
                {
                    b.Property<int>("MascotaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MascotaID"));

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ImagenMascota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreMascota")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("Peso")
                        .HasColumnType("real");

                    b.Property<int>("RazaID")
                        .HasColumnType("int");

                    b.Property<int>("TipoMascotaID")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MascotaID");

                    b.HasIndex("RazaID");

                    b.HasIndex("TipoMascotaID");

                    b.HasIndex("UsuarioCreacionId");

                    b.ToTable("Mascotas");
                });

            modelBuilder.Entity("Sistema_Veterinario.DAL.MascotaUsuarioAccion", b =>
                {
                    b.Property<int>("MascotaId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsuarioModificacionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MascotaId");

                    b.HasIndex("UsuarioCreacionId");

                    b.HasIndex("UsuarioModificacionId");

                    b.ToTable("MascotaUsuarioAcciones");
                });

            modelBuilder.Entity("Sistema_Veterinario.DAL.Medicamento", b =>
                {
                    b.Property<int>("MedicamentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicamentoID"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NombreMedicamento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MedicamentoID");

                    b.ToTable("Medicamentos");
                });

            modelBuilder.Entity("Sistema_Veterinario.DAL.MedicamentoCita", b =>
                {
                    b.Property<int>("MedicamentoCitaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicamentoCitaID"));

                    b.Property<int>("CitaID")
                        .HasColumnType("int");

                    b.Property<int>("Dosis")
                        .HasColumnType("int");

                    b.Property<int>("MedicamentoID")
                        .HasColumnType("int");

                    b.HasKey("MedicamentoCitaID");

                    b.HasIndex("CitaID");

                    b.HasIndex("MedicamentoID");

                    b.ToTable("MedicamentoCita");
                });

            modelBuilder.Entity("Sistema_Veterinario.DAL.Padecimiento", b =>
                {
                    b.Property<int>("PadecimientoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PadecimientoID"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MascotaID")
                        .HasColumnType("int");

                    b.HasKey("PadecimientoID");

                    b.HasIndex("MascotaID");

                    b.ToTable("Padecimientos");
                });

            modelBuilder.Entity("Sistema_Veterinario.DAL.Raza", b =>
                {
                    b.Property<int>("RazaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RazaID"));

                    b.Property<string>("DescripcionRaza")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TipoMascotaID")
                        .HasColumnType("int");

                    b.HasKey("RazaID");

                    b.HasIndex("TipoMascotaID");

                    b.ToTable("Razas");
                });

            modelBuilder.Entity("Sistema_Veterinario.DAL.TipoMascota", b =>
                {
                    b.Property<int>("TipoMascotaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoMascotaID"));

                    b.Property<string>("DescripcionTipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TipoMascotaID");

                    b.ToTable("TipoMascotas");
                });

            modelBuilder.Entity("Sistema_Veterinario.DAL.UsuarioApplication", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("ImagenUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoApellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UltimaConexion")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Sistema_Veterinario.DAL.Cita", b =>
                {
                    b.HasOne("Sistema_Veterinario.DAL.EstadoCita", "EstadoCita")
                        .WithMany("Citas")
                        .HasForeignKey("EstadoCitaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sistema_Veterinario.DAL.Mascota", "Mascota")
                        .WithMany("Citas")
                        .HasForeignKey("MascotaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sistema_Veterinario.DAL.UsuarioApplication", "VeterinarioPrincipal")
                        .WithMany()
                        .HasForeignKey("VeterinarioPrincipalID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sistema_Veterinario.DAL.UsuarioApplication", "VeterinarioSecundario")
                        .WithMany()
                        .HasForeignKey("VeterinarioSecundarioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EstadoCita");

                    b.Navigation("Mascota");

                    b.Navigation("VeterinarioPrincipal");

                    b.Navigation("VeterinarioSecundario");
                });

            modelBuilder.Entity("Sistema_Veterinario.DAL.DesparasitacionVacuna", b =>
                {
                    b.HasOne("Sistema_Veterinario.DAL.Mascota", "Mascota")
                        .WithMany("DesparasitacionesVacunas")
                        .HasForeignKey("MascotaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Mascota");
                });

            modelBuilder.Entity("Sistema_Veterinario.DAL.Mascota", b =>
                {
                    b.HasOne("Sistema_Veterinario.DAL.Raza", "Raza")
                        .WithMany("Mascotas")
                        .HasForeignKey("RazaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sistema_Veterinario.DAL.TipoMascota", "TipoMascota")
                        .WithMany("Mascotas")
                        .HasForeignKey("TipoMascotaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sistema_Veterinario.DAL.UsuarioApplication", "UsuarioCreacion")
                        .WithMany()
                        .HasForeignKey("UsuarioCreacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Raza");

                    b.Navigation("TipoMascota");

                    b.Navigation("UsuarioCreacion");
                });

            modelBuilder.Entity("Sistema_Veterinario.DAL.MascotaUsuarioAccion", b =>
                {
                    b.HasOne("Sistema_Veterinario.DAL.Mascota", "Mascota")
                        .WithMany()
                        .HasForeignKey("MascotaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sistema_Veterinario.DAL.UsuarioApplication", "UsuarioCreacion")
                        .WithMany()
                        .HasForeignKey("UsuarioCreacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sistema_Veterinario.DAL.UsuarioApplication", "UsuarioModificacion")
                        .WithMany()
                        .HasForeignKey("UsuarioModificacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Mascota");

                    b.Navigation("UsuarioCreacion");

                    b.Navigation("UsuarioModificacion");
                });

            modelBuilder.Entity("Sistema_Veterinario.DAL.MedicamentoCita", b =>
                {
                    b.HasOne("Sistema_Veterinario.DAL.Cita", "Cita")
                        .WithMany("MedicamentosCita")
                        .HasForeignKey("CitaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sistema_Veterinario.DAL.Medicamento", "Medicamento")
                        .WithMany("MedicamentosCita")
                        .HasForeignKey("MedicamentoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cita");

                    b.Navigation("Medicamento");
                });

            modelBuilder.Entity("Sistema_Veterinario.DAL.Padecimiento", b =>
                {
                    b.HasOne("Sistema_Veterinario.DAL.Mascota", "Mascota")
                        .WithMany("Padecimientos")
                        .HasForeignKey("MascotaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Mascota");
                });

            modelBuilder.Entity("Sistema_Veterinario.DAL.Raza", b =>
                {
                    b.HasOne("Sistema_Veterinario.DAL.TipoMascota", "TipoMascota")
                        .WithMany("Razas")
                        .HasForeignKey("TipoMascotaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoMascota");
                });

            modelBuilder.Entity("Sistema_Veterinario.DAL.Cita", b =>
                {
                    b.Navigation("MedicamentosCita");
                });

            modelBuilder.Entity("Sistema_Veterinario.DAL.EstadoCita", b =>
                {
                    b.Navigation("Citas");
                });

            modelBuilder.Entity("Sistema_Veterinario.DAL.Mascota", b =>
                {
                    b.Navigation("Citas");

                    b.Navigation("DesparasitacionesVacunas");

                    b.Navigation("Padecimientos");
                });

            modelBuilder.Entity("Sistema_Veterinario.DAL.Medicamento", b =>
                {
                    b.Navigation("MedicamentosCita");
                });

            modelBuilder.Entity("Sistema_Veterinario.DAL.Raza", b =>
                {
                    b.Navigation("Mascotas");
                });

            modelBuilder.Entity("Sistema_Veterinario.DAL.TipoMascota", b =>
                {
                    b.Navigation("Mascotas");

                    b.Navigation("Razas");
                });
#pragma warning restore 612, 618
        }
    }
}
